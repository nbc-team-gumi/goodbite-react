name: Deploy React App to Docker

on:
  push:
    branches: [ 137-feat-express-http2-설정 ]

env:
  DOCKER_IMAGE_TAG_NAME: good-bite-react

jobs:
  build-and-docker-push:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build the React app
        run: |
          REACT_APP_API_BASE_URL=${{ vars.REACT_APP_API_BASE_URL }} \
          REACT_APP_API_KEY_KAKAO=${{ secrets.KAKAO_API_KEY }} \
          REACT_APP_DOMAIN_URL=${{ vars.DOMAIN_URL }} \
          npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build --build-arg REACT_APP_API_BASE_URL=${{ vars.REACT_APP_API_BASE_URL }} \
                       --build-arg REACT_APP_API_KEY_KAKAO=${{ secrets.KAKAO_API_KEY }} \
                       --build-arg REACT_APP_DOMAIN_URL=${{ vars.DOMAIN_URL }} \
                       -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_TAG_NAME }}:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_TAG_NAME }}:latest

  deploy-to-ec2:
    needs: build-and-docker-push
    runs-on: ubuntu-20.04

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo usermod -aG docker $USER
            newgrp docker
            
            echo "${{ secrets.SERVER_KEY_PEM }}" > goodbite.site-key.pem
            echo "${{ secrets.SERVER_CERT_PEM }}" > goodbite.site-crt.pem
            
            CONTAINER_ID=$(sudo docker ps -q --filter "publish=443-443")
            
            if [ ! -z "$CONTAINER_ID" ]; then
            sudo docker stop $CONTAINER_ID
            sudo docker rm $CONTAINER_ID
            fi
            
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_TAG_NAME }}:latest
            
            sudo docker run -d -p 443:443 \
            -v $(pwd)/goodbite.site-key.pem:/app/goodbite.site-key.pem \
            -v $(pwd)/goodbite.site-crt.pem:/app/goodbite.site-crt.pem \
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_TAG_NAME }}:latest
            
            # PEM 파일 삭제
            rm goodbite.site-key.pem goodbite.site-crt.pem